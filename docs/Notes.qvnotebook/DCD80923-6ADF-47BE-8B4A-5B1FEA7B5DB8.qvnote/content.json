{
  "title": "Dev Notes",
  "cells": [
    {
      "type": "text",
      "data": "Kill unnecessary auth tokens.<div><p style=\"margin: 0px; font-size: 12px; line-height: normal; font-family: 'Andale Mono'; color: rgb(40, 254, 20); background-color: rgba(0, 0, 0, 0.901961);\"><span style=\"font-variant-ligatures: no-common-ligatures\">from oauth2_provider.models import AccessToken</span></p><p style=\"margin: 0px; font-size: 12px; line-height: normal; font-family: 'Andale Mono'; color: rgb(40, 254, 20); background-color: rgba(0, 0, 0, 0.901961);\"><span style=\"font-variant-ligatures: no-common-ligatures\">tokes = AccessToken.objects.filter(user__id=6)</span></p><p style=\"margin: 0px; font-size: 12px; line-height: normal; font-family: 'Andale Mono'; color: rgb(40, 254, 20); background-color: rgba(0, 0, 0, 0.901961);\"><span style=\"font-variant-ligatures: no-common-ligatures\">tokes.delete()</span></p></div>"
    },
    {
      "type": "text",
      "data": "<div><pre style=\"background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;\"><span style=\"color:#008080;\">Demo_KohnkeStephens_JasmineThompson–Adore[OfficialVideo]<br></span><span style=\"color:#008080;\">Demo_HulmSteller_JhenéAikoCoversTupacsKeepYaHeadUp<br></span><span style=\"color:#008080;\">Demo_FullenWilder_RachelCollier_OriginalSongs&amp;BeatMakers4<br></span><span style=\"color:#008080;\">Demo_TheresaBenitez_No[o]neUltrakillvs.TeamEmpireGlobaleSportsCup</span></pre><pre style=\"background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;\"><span style=\"color:#008080;\">Demo_MckenzieLaura_BestOneHandCatchNFLInterceptionDolphinsGrines</span></pre><pre style=\"background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;\"><span style=\"color:#008080;\"><br></span></pre><pre style=\"background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;\"><pre style=\"color: rgb(248, 248, 242); background-color: rgb(39, 40, 34); font-family: Menlo; font-size: 9pt;\"><span style=\"color: rgb(0, 128, 128);\">Demo_DarrenPeck_BestTysonKnockout39</span></pre></pre></div><div><br></div><div><br></div>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "markdown",
      "data": "\n### Full Text Search Indexes\n\nTo speed up the search, PostgreSQL offers the use of indexes. It is worth noting that the index is not required for a full-text search. But if the search takes place in specific (constant) columns, the presence of the index is desirable.\n\nThere are 2 types of indexes:\n\nGiST (Generalized Search Tree) - a bit signature is assigned for each document, which contains information about all the tokens that are in this document. It is created with a command:\n\n```\nCREATE INDEX name ON table USING GIST (column);\n\n```\n\nGIN (Generalized Inverted Index) - in this type of index the key is a token and the value is an organized list of document identifiers which contain the token. It is created with a command:\n\n```\nCREATE INDEX name ON table USING GIN (column);\n```\n\nThere is a big difference in performance between these two types of indexes. Before you choose which one to use, I recommend you to study the documentation on them in detail. I would like to add that:\n\n* the creation of GIN index is 3 times faster than GiST\n* GIN index is 2-3 times bigger than GiST-index\n* Search for GIN index is 3 times faster than GiST index\n* GiN index updates 10 times slower\n\nIt is best to use GiST index for updated data, and GIN index suits well for static data."
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}