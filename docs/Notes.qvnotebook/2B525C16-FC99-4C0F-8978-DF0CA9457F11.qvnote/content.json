{
  "title": "TODO",
  "cells": [
    {
      "type": "markdown",
      "data": "### Up Next:\n- [ ] Implement new /search endpoint\n- [ ] Properly set is_ranked_10 on videos .. periodically\n- [ ] Base analytics support\n- [ ] Setup gunicorn upstart conf\n- [ ] Profile and improve <all> endpoint queries\n- [ ] Periodic failure checking and re-que for failed video processing\n- [ ] Spin up a middle-tier cache server\n- [ ] Spin up another couple of app boxes\n- [ ] Load Test\n\n### Before Demo:\n- [ ] Remove CORS origin allow all in Django\n- [ ] Local_Settings.py - regen secret key\n- [ ] Redo Admin p/w and setup POSTGRES DB\n- [ ] Rate Throttling for Register and Auth\n- [ ] Setup API Demo Environment\n- [ ] Cloudfront for Videos\n\n### Small Things to tackle eventually\n- [ ] Unit Tests for Put/Patch on /users/<id>\n- [ ] Category Sort support.\n- [ ] Favorite Category population based on uploaded videos\n- [ ] Paginate /videos/top/\n- [ ] Update favorite categories for users.\n\n### July Deliverables\n- [x] Profile Creation\n- [x] Avatars\n- [x] Video Upload\n- [x] Video Ranked\n- [x] Video Transcode / Storage / Relation\n- [x] User Following\n- [x] Basic Search\n- [ ] Featured User increased ranking weight\n- [ ] Basic Analytics\n\n### Before Production:\n - [ ] Update CodeDeploy Permissions for code deploy user. More restrictive\n - [ ] See if Python 3.6 is available on Amazon Yum Repo.\n - [ ] Update CORS configuration on ranked-video-upload S3 bucket... lock the allowed down.\n - [ ] MemCache / Caching implementation.\n - [ ] LOTS!\n\n### Done:\n- [x] Update Profile serializer to render categories\n- [x] Limit videos to followers\n- [x] Disable /api/v1/users/ list\n- [x] Update follower / following count on Profile (Make sure it's Atomic)\n- [x] Add profile counts to /users/<id> endpoint\n- [x] Add top 10 ranked count to profile\n- [x] Add Mocked Ranked_10 count for profile page.\n- [x] Cloudfront for Static\n- [x] Comment out profile update on deployment\n- [x] Create import / update job for profiles/videos (from spreadsheet)\n- [x] Import form for Taylor\n- [x] Make sure to update the documentation for /users/{user_id} - include 'videos' \n- [x] Set LightProfile model for multiple endpoints.\n- [x] Remove E-Mail from serialized profile info on video detail\n- [x] Functional API Endpoints [ Search ]\n- [x] Ability to see who follows a user.\n- [x] Avatar Upload Front-End Help for Greg\n- [x] Setup Profile Following.\n- [x] Verify Patch/PUT on Videos/detail\n- [x] Update Profile Put/Patch\n- [x] Create some demo data for Greg\n- [x] RDS Setup for shared DB\n- [x] Create Categories on dev DB\n- [x] Upload category assets to S3\n- [x] Fix NGINX static hosting.\n- [x] Update Swagger Documentation for Videos\n- [x] Functional API Endpoints [ Video ]\n- [x] Functional API Endpoints [ Video - Rank ]\n- [x] Functional API Endpoints [ Video - Comment ]\n- [x] Functional API Endpoints [ Categories ]\n- [x] Fix the issue of a 500 when there are no videos.\n- [x] Video Ranking\n- [x] Video Commenting\n- [x] Create Auto-Deploy for Greg\n- [x] Video Endpoint Setup\n- [x] Video Endpoint Tweaks\n- [x] Video Auto-Transcode Capability\n- [x] Video Upload Capability\n- [x] Avatar Uploads functionality\n- [x] [Roll in Django OAuth](quiver-note-url/1436ADF9-7D48-435E-BF0D-E6D4017DF71A)\n- [x] Add authorization header to API documentation .. all secure endpoints.\n- [x] Finish API Documentation\n- [x] Deployment stalling during afterInstall (gunicorn direct not daemon - upstart)\n- [x] Create SNS Listener for Transcode DONE / ERROR\n- [x] Listen to AWS SNS for - 'RankedEncodingDone' and 'RankedEncodingFailed'\n- [x] Clean up old, non finished uploading files on S3 and video relations locally.\n"
    },
    {
      "type": "markdown",
      "data": "# Contextual Search\n------\nThe content to be searched for will change based on the selected tab\n\n\n### Explore\n\n**Results**: Mixture of Profile / Video\n**Notes**: \n  - If the search phrase contains a \\# at the beginning - then limit the results to videos.\n\n### Trending\n\n/list/top/\n\n### Ranked 10\n\n**Results**: Videos (Limit to videos with the is\\_ranked\\_ten flag set to True)\n**Note**: \n- is_ranked_ten will be faked for the alpha. (Maybe)\n\n### ‘Trend Setters’:\n\n**Results**: Profiles (Profiles with videos that are highly ranked)\n\n**Notes**: \n  - This won’t be working for the alpha."
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}