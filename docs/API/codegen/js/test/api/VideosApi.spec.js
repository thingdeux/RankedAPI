/**
 * Ranked API
 * API for mobile and/or Web Clients
 *
 * OpenAPI spec version: 0.0.8
 * Contact: me@josh.land
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RankedApi);
  }
}(this, function(expect, RankedApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RankedApi.VideosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VideosApi', function() {
    describe('addVideoRank', function() {
      it('should call addVideoRank successfully', function(done) {
        //uncomment below and update the code to test addVideoRank
        //instance.addVideoRank(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVideoComment', function() {
      it('should call createVideoComment successfully', function(done) {
        //uncomment below and update the code to test createVideoComment
        //instance.createVideoComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopVideos', function() {
      it('should call getTopVideos successfully', function(done) {
        //uncomment below and update the code to test getTopVideos
        //instance.getTopVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoDetails', function() {
      it('should call getVideoDetails successfully', function(done) {
        //uncomment below and update the code to test getVideoDetails
        //instance.getVideoDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('initVideoUpload', function() {
      it('should call initVideoUpload successfully', function(done) {
        //uncomment below and update the code to test initVideoUpload
        //instance.initVideoUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeVideRank', function() {
      it('should call removeVideRank successfully', function(done) {
        //uncomment below and update the code to test removeVideRank
        //instance.removeVideRank(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeVideo', function() {
      it('should call removeVideo successfully', function(done) {
        //uncomment below and update the code to test removeVideo
        //instance.removeVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoDetails', function() {
      it('should call updateVideoDetails successfully', function(done) {
        //uncomment below and update the code to test updateVideoDetails
        //instance.updateVideoDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
